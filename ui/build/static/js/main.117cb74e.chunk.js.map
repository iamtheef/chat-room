{"version":3,"sources":["Utils/AxiosClient.ts","Context/User.tsx","Components/Assets/InfoIcon.tsx","Components/Landing.tsx","Context/Contacts.tsx","Components/Assets/AdminIcon.tsx","Components/Search.tsx","Context/Messages.tsx","Context/Inbox.tsx","Components/Contacts.tsx","Context/Socket.tsx","Utils/crypto.ts","Components/Assets/Panel.tsx","Components/ChatWindow.tsx","Components/Assets/BlankChat.tsx","Components/Assets/InboxIcon.tsx","Components/Assets/SettingsIcon.tsx","Components/MainRoom.tsx","Components/Inbox.tsx","Components/Info.tsx","Components/Settings.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["client","axios","create","baseURL","timeout","headers","UserContext","createContext","undefined","UserProvider","children","useState","user","setUser","socket","io","history","useHistory","e","form","view","id","a","done","preventDefault","post","res","data","logged","alert","msg","useEffect","emit","username","dbID","_id","close","Provider","value","submit","InfoIcon","style","marginTop","width","to","alt","src","height","Landing","useContext","setView","email","setEmail","password","setPassword","setUsername","push","className","type","onClick","required","onChange","target","ContactsContext","ContactsProvider","contacts","setContacts","onUsers","setOnUsers","getContacts","then","status","add","map","c","indexOf","remove","getIDs","focusOnEditor","document","getElementById","focus","AdminIcon","margin","Search","results","setResults","term","setTerm","length","users","u","key","avatar","isAdmin","toString","MessagesContext","MessagesProvider","currentChat","setCurrentChat","messages","setMessages","cmdPressed","setCmdPressed","mes","initMessages","unreadMessages","forEach","sender","message","addEventListener","keyCode","isItNewContact","hasUnreadMessages","hasFrom","m","Set","clearThisContact","prev","InboxContext","InboxProvider","requests","setRequests","unread","setUnread","temporaryMessages","newContacts","reqs","acceptRequest","filter","r","me","contact","removeRequest","Contacts","on","listStyleType","stopPropagation","SocketContext","SocketProvider","listener","receiver","off","listenForSubmit","str","AES","encrypt","process","Panel","last","scrollIntoView","i","decrypt","CryptoJS","enc","Utf8","ChatWindow","position","find","onKeyDown","BlankChat","marginLeft","opacity","InboxIcon","maxWidth","SettingsIcon","MainRoom","path","component","Inbox","req","marginRight","Info","href","Settings","newPassword","setForm","handleSubmit","getElementsByName","f","name","persist","marginBottom","App","exact","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.117cb74e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const client = axios.create({\n  baseURL: \"http://localhost:4000\",\n  timeout: 10000,\n  headers: { \"X-Custom-Header\": \"foobar\" },\n});\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport User from \"../../../server/models/User\";\nimport { client } from \"../Utils/AxiosClient\";\nimport { Form } from \"../../../types\";\nimport io from \"socket.io-client\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const UserContext = createContext<any>(undefined);\n\nexport function UserProvider({ children }: Props) {\n  const [user, setUser] = useState<typeof User | undefined>(undefined);\n\n  const socket = io(\"http://localhost:4000\");\n  const history = useHistory();\n\n  async function submit(e: any, form: Form, view: string, id: string) {\n    var done = false;\n    e.preventDefault();\n    try {\n      let res = await client.post(`/${view}`, { form, id });\n      done = res.data.logged;\n      if (res.data.logged) {\n        setUser(res.data.user);\n      } else {\n        alert(res.data.msg);\n      }\n    } catch (e) {\n      alert(\"Something went wrong \\n\");\n      done = false;\n    }\n\n    return done;\n  }\n\n  useEffect(() => {\n    if (user) {\n      socket.emit(\"active\", { username: user.username, dbID: user._id });\n    } else {\n      socket.close();\n    }\n  }, [user, socket]);\n\n  return (\n    <UserContext.Provider value={{ user, setUser, submit, socket, history }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const InfoIcon: FC = () => {\n  return (\n    <div style={{ marginTop: \"-10px\", width: \"10px\" }}>\n      <Link to=\"/info\">\n        <img\n          alt=\"info-icon\"\n          src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.iconsdb.com%2Ficons%2Fpreview%2Fwhite%2Finfo-2-xxl.png&f=1&nofb=1\"\n          width=\"30\"\n          height=\"30\"\n        ></img>\n      </Link>\n    </div>\n  );\n};\n","import React, { FC, useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../Context/User\";\nimport { Form } from \"../../../types\";\nimport { InfoIcon } from \"./Assets/InfoIcon\";\n\nexport const Landing: FC = () => {\n  const { submit, user } = useContext(UserContext);\n  const [view, setView] = useState(\"login\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [username, setUsername] = useState<string>(\"\");\n  const history = useHistory();\n\n  const form: Form = {\n    email,\n    password,\n    username,\n  };\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/main\");\n    }\n  }, [user, history]);\n  return (\n    <div>\n      <section className=\"forms-section\">\n        <h1 className=\"section-title\">Welcome to our service</h1>\n        <h3>\n          <i className=\"quote\">May all you type dissapear</i>\n        </h3>\n        <div className=\"icons\">\n          <InfoIcon />\n        </div>\n        <div className=\"forms\">\n          <div className={`form-wrapper ${view === \"login\" && \"is-active\"}`}>\n            <button\n              type=\"button\"\n              className=\"switcher switcher-login\"\n              onClick={() => setView(\"login\")}\n            >\n              Login\n              <span className=\"underline\"></span>\n            </button>\n            <form className=\"form form-login\">\n              <fieldset>\n                <legend>Please, enter your email and password to login.</legend>\n                <div className=\"input-block\">\n                  <label>E-mail</label>\n                  <input\n                    type=\"email\"\n                    required\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n                <div className=\"input-block\">\n                  <label>Password</label>\n                  <input\n                    type=\"password\"\n                    required\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </div>\n                <Link\n                  to=\"#\"\n                  onClick={() =>\n                    alert(\n                      \"If you forgot your password please contact us in *iamtheef_th@protonmail.com*\"\n                    )\n                  }\n                >\n                  Forgot your password?\n                </Link>\n              </fieldset>\n              <button\n                className=\"btn-login\"\n                type=\"submit\"\n                onClick={(e) => submit(e, form, view)}\n              >\n                Login\n              </button>\n            </form>\n          </div>\n          <div className={`form-wrapper ${view === \"register\" && \"is-active\"}`}>\n            <button\n              type=\"button\"\n              className=\"switcher switcher-signup\"\n              onClick={() => setView(\"register\")}\n            >\n              Sign Up\n              <span className=\"underline\"></span>\n            </button>\n            <form className=\"form form-signup\">\n              <fieldset>\n                <legend>\n                  Please, enter your email, password and password confirmation\n                  for sign up.\n                </legend>\n\n                <div className=\"input-block\">\n                  <label>Username</label>\n                  <input\n                    onChange={(e) => setUsername(e.target.value)}\n                    type=\"text\"\n                    required\n                  />\n                </div>\n                <div className=\"input-block\">\n                  <label>E-mail</label>\n                  <input\n                    onChange={(e) => setEmail(e.target.value)}\n                    type=\"email\"\n                    required\n                  />\n                </div>\n                <div className=\"input-block\">\n                  <label>Password</label>\n                  <input\n                    onChange={(e) => setPassword(e.target.value)}\n                    type=\"password\"\n                    required\n                  />\n                </div>\n              </fieldset>\n              <button\n                type=\"submit\"\n                className=\"btn-signup\"\n                onClick={(e) => submit(e, form, view)}\n              >\n                Continue\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { createContext, useState, useContext } from \"react\";\nimport { client } from \"../Utils/AxiosClient\";\nimport { UserContext } from \"../Context/User\";\nimport User from \"../../../server/models/User\";\n\nexport const ContactsContext = createContext<any>(undefined);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport function ContactsProvider({ children }: Props) {\n  const [contacts, setContacts] = useState<typeof User[]>([]);\n  const [onUsers, setOnUsers] = useState<string[]>([]);\n  const { user } = useContext(UserContext);\n\n  const getContacts = async () => {\n    await client.post(\"/get_contacts\", { id: user._id }).then((contacts) => {\n      setContacts(contacts.data.contacts);\n      setOnUsers(contacts.data.status);\n    });\n  };\n\n  const add = (add: string) => {\n    const { _id } = user;\n    let contactIDs = contacts.map((c: any) => c._id);\n    if (!(contactIDs.indexOf(add) < 0)) {\n      alert(\"DUPLICATE CONTACTS ARE NOT ALLOWED\");\n    } else {\n      client.post(\"/add\", { _id, add }).then((contacts) => {\n        if (contacts.data) {\n          getContacts();\n        }\n      });\n    }\n  };\n\n  const remove = (id: string) => {\n    const { _id } = user;\n    client.post(\"/remove\", { _id, id }).then((contacts) => {\n      if (contacts.data) {\n        getContacts();\n      }\n    });\n  };\n\n  const focusOnEditor = () => {\n    document.getElementById(\"edi\")?.focus();\n  };\n\n  const getIDs = () => {\n    return contacts.map((c: any) => c._id);\n  };\n\n  return (\n    <ContactsContext.Provider\n      value={{\n        contacts,\n        setContacts,\n        getContacts,\n        add,\n        remove,\n        onUsers,\n        setOnUsers,\n        getIDs,\n        focusOnEditor,\n      }}\n    >\n      {children}\n    </ContactsContext.Provider>\n  );\n}\n","import React, { FC } from \"react\";\n\nexport const AdminIcon: FC = () => {\n  return (\n    <img\n      style={{ margin: \"-50px\" }}\n      alt=\"admin shield\"\n      src={\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn3.iconfinder.com%2Fdata%2Ficons%2Fpix-glyph-set%2F50%2F520865-shield_2-512.png&f=1&nofb=1\"\n      }\n      width=\"30\"\n      height=\"30\"\n    ></img>\n  );\n};\n","import React, { FC, useState, useEffect, useContext } from \"react\";\nimport User from \"../../../server/models/User\";\nimport { client } from \"../Utils/AxiosClient\";\nimport { UserContext } from \"../Context/User\";\nimport { ContactsContext } from \"../Context/Contacts\";\nimport { AdminIcon } from \"./Assets/AdminIcon\";\n\nexport const Search: FC = () => {\n  const { user } = useContext(UserContext);\n  const { add } = useContext(ContactsContext);\n  const [results, setResults] = useState<any>([]);\n  const [term, setTerm] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (term === \"\" || term.length <= 3) {\n      setResults([]);\n    } else {\n      client.post(\"/search\", { term: term }).then((users) => {\n        setResults(users.data);\n      });\n    }\n  }, [term]);\n\n  return (\n    <div className=\"search-box\">\n      <h2 className=\"title\">Search</h2>\n      <form className=\"search-bar\">\n        <input type=\"search\" onChange={(e) => setTerm(e.target.value)} />\n      </form>\n\n      <div>\n        <ul className=\"search\">\n          {results.map((u: typeof User) => (\n            <li key={`${u._id}`} className=\"list-item\">\n              <img className=\"user-icon\" src={`${u.avatar}`} alt=\"user img\" />\n              <p>{u.username}</p>\n              {u.isAdmin && <AdminIcon />}\n              <button\n                onClick={() => {\n                  if (user._id !== u._id) {\n                    add(u._id.toString());\n                  } else {\n                    alert(\"ELLIOT, IS IT YOU?\");\n                  }\n                }}\n              >\n                Add\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { ContactsContext } from \"../Context/Contacts\";\nimport { UserContext } from \"../Context/User\";\nimport User from \"../../../server/models/User\";\nimport { Message, Messages } from \"../../../types\";\nimport { client } from \"../Utils/AxiosClient\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MessagesContext = createContext<any>(undefined);\n\nexport function MessagesProvider({ children }: Props) {\n  const [currentChat, setCurrentChat] = useState<string | undefined>(undefined);\n  const [messages, setMessages] = useState<Messages>();\n  const { contacts, getIDs } = useContext(ContactsContext);\n  const { user } = useContext(UserContext);\n  const [cmdPressed, setCmdPressed] = useState(false);\n\n  let mes: Messages = {};\n\n  const initMessages = async () => {\n    contacts.map((c: typeof User) => (mes[c._id.toString()] = [] as Message[]));\n\n    if (user && user.unreadMessages.length) {\n      user.unreadMessages.forEach((msg: Message) => {\n        if (mes[msg.sender!]) {\n          mes[msg.sender!] = [\n            ...mes[msg.sender!],\n            { username: msg.username, message: msg.message },\n          ];\n        } else {\n          mes[msg.sender!] = [{ username: msg.username, message: msg.message }];\n        }\n      });\n    }\n    setMessages({ ...mes });\n    client.post(\"/expire_messages\", { id: user._id });\n  };\n\n  const hasUnreadMessages = () => {\n    if (user) {\n      let hasFrom = user.unreadMessages.map((m: Message) => m.sender);\n      return [...new Set(hasFrom)];\n    }\n  };\n\n  const clearThisContact = (id: string) => {\n    setMessages((prev: any) => ({ ...prev, [id]: [] }));\n  };\n\n  const isItNewContact = (msg: Message) => {\n    return getIDs().indexOf(msg.sender) < 0 && msg.sender !== user._id;\n  };\n\n  useEffect(() => {\n    if (contacts.length && !messages) {\n      initMessages();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contacts]);\n\n  useEffect(() => {\n    // cmd + K to clear all chats function\n    document.addEventListener(\"keyup\", (e) => {\n      if (e.keyCode === 91) {\n        setCmdPressed(false);\n      }\n    });\n\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 91) {\n        setCmdPressed(true);\n      }\n      if (cmdPressed && e.keyCode === 75) {\n        initMessages();\n      }\n    });\n  });\n  return (\n    <MessagesContext.Provider\n      value={{\n        currentChat,\n        setCurrentChat,\n        messages,\n        setMessages,\n        isItNewContact,\n        initMessages,\n        hasUnreadMessages,\n        clearThisContact,\n      }}\n    >\n      {children}\n    </MessagesContext.Provider>\n  );\n}\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { ContactsContext } from \"../Context/Contacts\";\nimport { MessagesContext } from \"../Context/Messages\";\nimport { UserContext } from \"../Context/User\";\nimport { client } from \"../Utils/AxiosClient\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const InboxContext = createContext<any>(undefined);\n\nexport function InboxProvider({ children }: Props) {\n  const { contacts, add } = useContext(ContactsContext);\n  const { setMessages, hasUnreadMessages } = useContext(MessagesContext);\n  const [requests, setRequests] = useState<any>([]);\n  const [unread, setUnread] = useState<any>([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    if (user && user.temporaryMessages.length && !!contacts) {\n      let newContacts: any = [];\n      let reqs: any = [];\n\n      user.temporaryMessages.forEach((m: any) => {\n        if (newContacts.indexOf(m.sender) < 0) {\n          newContacts.push(m.sender);\n          reqs.push({ username: m.username, id: m.sender });\n        } else if (unread.indexOf(m.sender < 0)) {\n          setUnread((prev: any) => [...prev, m.sender]);\n        }\n      });\n\n      if (newContacts.length > 0) {\n        setRequests(reqs);\n      }\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contacts]);\n\n  useEffect(() => {\n    if (user && user.unreadMessages.length > 0) {\n      setUnread((prev: any) => [...prev, ...hasUnreadMessages()]);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  const acceptRequest = async (id: string) => {\n    add(id);\n    setRequests((prev: any) => prev.filter((r: any) => r.id !== id));\n    client\n      .post(\"/get_messages_by_this_contact\", { me: user._id, contact: id })\n      .then((res) => {\n        setMessages((prev: any) => ({\n          ...prev,\n          [id]: [...res.data],\n        }));\n\n        setUnread((prev: any) => [...prev, id]);\n        user.temporaryMessages = user.temporaryMessages.filter(\n          (m: any) => m.sender !== id\n        );\n      });\n  };\n\n  const removeRequest = async (id: string) => {\n    await client.post(\"/remove_request\", { user: user._id, id }).then((res) => {\n      if (res.data) {\n        user.temporaryMessages = user.temporaryMessages.filter(\n          (m: any) => m.sender !== id\n        );\n        setRequests((prev: any) => prev.filter((r: any) => r.id !== id));\n      }\n    });\n  };\n\n  return (\n    <InboxContext.Provider\n      value={{\n        requests,\n        setRequests,\n        acceptRequest,\n        removeRequest,\n        unread,\n        setUnread,\n      }}\n    >\n      {children}\n    </InboxContext.Provider>\n  );\n}\n","import React, { FC, useContext, useEffect } from \"react\";\nimport User from \"../../../server/models/User\";\nimport { ContactsContext } from \"../Context/Contacts\";\nimport { UserContext } from \"../Context/User\";\nimport { MessagesContext } from \"../Context/Messages\";\nimport { InboxContext } from \"../Context/Inbox\";\nimport { useHistory } from \"react-router-dom\";\nimport { AdminIcon } from \"./Assets/AdminIcon\";\n\nexport const Contacts: FC = () => {\n  const {\n    contacts,\n    getContacts,\n    remove,\n    onUsers,\n    setOnUsers,\n    focusOnEditor,\n  } = useContext(ContactsContext);\n  const { currentChat, setCurrentChat, clearThisContact } = useContext(\n    MessagesContext\n  );\n  const { unread, setUnread } = useContext(InboxContext);\n  const { socket } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    getContacts();\n\n    socket.on(\"status\", (users: string[]) => {\n      setOnUsers(users);\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [socket]);\n\n  return (\n    <div className=\"contacts\">\n      <h2 className=\"title\">Contacts</h2>\n      <div>\n        <ul\n          style={{\n            listStyleType: \"none\",\n          }}\n        >\n          {contacts.map((contact: typeof User) => (\n            <li\n              className={`contact-item ${\n                contact._id === currentChat && \"isCurrentChat\"\n              }`}\n              key={`${contact._id}`}\n              onClick={() => {\n                setCurrentChat(contact._id);\n                history.push(`/${currentChat}`);\n                setUnread((prev: any) =>\n                  prev.filter((m: any) => m !== contact._id)\n                );\n                focusOnEditor();\n              }}\n            >\n              <img\n                className=\"user-icon\"\n                src={`${contact.avatar}`}\n                alt=\"user img\"\n              />\n              {onUsers.indexOf(contact._id) >= 0 ? (\n                <i className=\"status on\">1</i>\n              ) : (\n                <i className=\"status off\">0</i>\n              )}\n              <p\n                className={`${\n                  unread.indexOf(contact._id) > -1 && \"has-message\"\n                }`}\n              >\n                {contact.username}\n              </p>\n              {contact.isAdmin && <AdminIcon />}\n              <p\n                onClick={(e) => {\n                  e.stopPropagation();\n                  remove(contact._id);\n                  clearThisContact(contact._id);\n                  history.push(`/`);\n                }}\n              >\n                X\n              </p>\n            </li>\n          ))}\n        </ul>\n        <p\n          onClick={() => {\n            history.push(`/`);\n            setCurrentChat(undefined);\n          }}\n        >\n          ▓\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { createContext, useContext } from \"react\";\nimport { Message } from \"../../../types\";\nimport { UserContext } from \"../Context/User\";\nimport { MessagesContext } from \"../Context/Messages\";\nimport { InboxContext } from \"../Context/Inbox\";\nimport { client } from \"../Utils/AxiosClient\";\nimport { encrypt } from \"../Utils/crypto\";\n\nexport const SocketContext = createContext<any>(undefined);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport function SocketProvider({ children }: Props) {\n  const { currentChat, setMessages, isItNewContact } = useContext(\n    MessagesContext\n  );\n  const { setUnread, setRequests, requests } = useContext(InboxContext);\n  const { user, socket } = useContext(UserContext);\n\n  const listener = () => {\n    socket.on(\"message\", (msg: Message) => {\n      const { username, sender, receiver, message } = msg;\n\n      if (isItNewContact(msg)) {\n        if (requests.map((r: any) => r.id).indexOf(msg.sender) < 0) {\n          setRequests((prev: any) => [...prev, { username, id: sender }]);\n        }\n        client.post(\"/store_message\", { id: user._id, msg });\n        return;\n      }\n\n      if (user._id === sender) {\n        setMessages((prev: any) => ({\n          ...prev,\n          [receiver!]: [...prev[receiver!], { username, message }],\n        }));\n      } else if (user._id === receiver) {\n        setMessages((prev: any) => ({\n          ...prev,\n          [sender!]: [...prev[sender!], { username, message }],\n        }));\n\n        if (currentChat !== sender) {\n          setUnread((prev: any) => [...prev, sender]);\n        }\n      }\n    });\n    return () => {\n      socket.off(\"message\");\n    };\n  };\n\n  const listenForSubmit = (e: any) => {\n    if (e.keyCode === 13) {\n      let msg: Message = {\n        message: encrypt(e.target.value),\n        username: user.username,\n        receiver: currentChat,\n        sender: user._id,\n      };\n\n      socket.emit(\"incoming\", msg);\n      e.target.value = \"\";\n      e.target.focus();\n    }\n  };\n\n  return (\n    <SocketContext.Provider value={{ listener, listenForSubmit }}>\n      {children}\n    </SocketContext.Provider>\n  );\n}\n","import AES from \"crypto-js/aes\";\nimport CryptoJS from \"crypto-js\";\n\nexport const decrypt = (str: string) => {\n  let bytes = AES.decrypt(str, process.env.REACT_APP_key!);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\n\nexport const encrypt = (str: string) => {\n  return AES.encrypt(str, process.env.REACT_APP_key!).toString();\n};\n","import React, { FC, useContext } from \"react\";\nimport { MessagesContext } from \"../../Context/Messages\";\nimport { Message } from \"../../../../types\";\nimport { decrypt } from \"../../Utils/crypto\";\n\nexport const Panel: FC = () => {\n  const { currentChat, messages } = useContext(MessagesContext);\n\n  const last = document.getElementById(\"last\");\n  if (last) {\n    last.scrollIntoView();\n  }\n\n  return (\n    <div className=\"main-room\">\n      <ul style={{ listStyleType: \"none\" }}>\n        {messages[currentChat] &&\n          messages[currentChat].map((msg: Message, i: number) => (\n            <li key={i} className=\"message-list\">\n              {(i === 0 ||\n                messages[currentChat][i].username !==\n                  messages[currentChat][i - 1].username) && (\n                <h4>{msg.username}</h4>\n              )}\n              <p className=\"message\">{decrypt(msg.message)}</p>\n            </li>\n          ))}\n        <div id=\"last\" style={{ marginTop: \"20px\" }}></div>\n      </ul>\n    </div>\n  );\n};\n","import React, { FC, useContext } from \"react\";\nimport { MessagesContext } from \"../Context/Messages\";\nimport { ContactsContext } from \"../Context/Contacts\";\nimport { SocketContext } from \"../Context/Socket\";\nimport { Panel } from \"./Assets/Panel\";\n\nexport const ChatWindow: FC = () => {\n  const { currentChat } = useContext(MessagesContext);\n  const { listenForSubmit } = useContext(SocketContext);\n  const { contacts } = useContext(ContactsContext);\n\n  return (\n    <div>\n      <div className=\"chatwin\">\n        <h5 style={{ marginTop: \"-45px\", position: \"fixed\" }}>\n          {contacts.find((u: any) => u._id === currentChat).username}\n        </h5>\n\n        <Panel />\n      </div>\n      <input\n        className=\"editor\"\n        id=\"edi\"\n        onKeyDown={(e) => listenForSubmit(e)}\n      />\n    </div>\n  );\n};\n","import React, { FC, useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../Context/User\";\nimport { SocketContext } from \"../../Context/Socket\";\n\nexport const BlankChat: FC = () => {\n  const { listener } = useContext(SocketContext);\n  const { socket } = useContext(UserContext);\n\n  useEffect(() => {\n    listener();\n\n    return () => {\n      socket.off(\"message\");\n    };\n  }, [socket, listener]);\n\n  return (\n    <div>\n      <div className=\"anim-background\">\n        <h2>Select a chat first</h2>\n        <img\n          alt=\"face\"\n          src=\"https://llwproductions.files.wordpress.com/2012/11/anonymous.png\"\n          width=\"500\"\n          height=\"400\"\n          style={{ marginLeft: \"120px\", marginTop: \"-60px\", opacity: \"0.1\" }}\n        ></img>\n        <input className=\"editor faded\" style={{ marginLeft: \"-550px\" }} />\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InboxContext } from \"../../Context/Inbox\";\n\nexport const InboxIcon: FC = () => {\n  const { requests } = useContext(InboxContext);\n\n  return (\n    <div style={{ maxWidth: \"10px\" }}>\n      <Link to=\"/inbox\">\n        <div>\n          <div className={`inbox ${requests.length > 0 && \"has-inbox\"}`}>\n            {requests.length && <div>{requests.length}</div>}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const SettingsIcon: FC = () => {\n  return (\n    <div>\n      <Link to=\"/settings\">\n        <img\n          alt=\"info-icon\"\n          src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.iconsdb.com%2Ficons%2Fdownload%2Fwhite%2Fsettings-512.png&f=1&nofb=1\"\n          width=\"30\"\n          height=\"30\"\n          style={{ marginLeft: \"-60px\", marginTop: \"-80px\" }}\n        ></img>\n      </Link>\n    </div>\n  );\n};\n","import React, { FC, useContext } from \"react\";\nimport { Redirect, MemoryRouter, Route } from \"react-router-dom\";\nimport { Search } from \"./Search\";\nimport { Contacts } from \"./Contacts\";\nimport { ChatWindow } from \"./ChatWindow\";\nimport { UserContext } from \"../Context/User\";\nimport { BlankChat } from \"./Assets/BlankChat\";\nimport { InboxIcon } from \"./Assets/InboxIcon\";\nimport { InfoIcon } from \"./Assets/InfoIcon\";\nimport { SettingsIcon } from \"./Assets/SettingsIcon\";\n\nexport const MainRoom: FC = () => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <div className=\"main-room\">\n      {user ? (\n        <div>\n          <div>\n            <h1 className=\"welcome\">WELCOME {user.username}</h1>\n            <div className=\"icons\">\n              <InfoIcon />\n              <SettingsIcon />\n            </div>\n          </div>\n          <InboxIcon />\n          <Search />\n          <MemoryRouter>\n            <Contacts />\n            <Route path={`/`} component={BlankChat}></Route>\n            <Route path={`/:id`} component={ChatWindow}></Route>\n          </MemoryRouter>\n        </div>\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n    </div>\n  );\n};\n","import React, { FC, useContext } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { UserContext } from \"../Context/User\";\nimport { InboxContext } from \"../Context/Inbox\";\n\nexport const Inbox: FC = () => {\n  const { requests, acceptRequest, removeRequest } = useContext(InboxContext);\n  const { user } = useContext(UserContext);\n\n  return (\n    <div>\n      <h2 className=\"quote\">INBOX</h2>\n      <Link to=\"/main\">\n        {\" \"}\n        <p className=\"quote\">{\"<<<\"} </p>{\" \"}\n      </Link>\n      {user ? (\n        <ul className=\"inbox-list\">\n          {requests.map((req: any) => (\n            <li key={`${req.id}`} className=\"inbox-item\">\n              <p>{req.username}</p>\n              <button\n                onClick={() => acceptRequest(req.id)}\n                style={{ marginRight: \"10px\" }}\n              >\n                Accept Request\n              </button>\n              <button onClick={() => removeRequest(req.id)}>\n                Delete Request\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Info: FC = () => {\n  return (\n    <div>\n      <Link to=\"/main\">\n        {\" \"}\n        <p className=\"quote\">{\"<<<\"} </p>{\" \"}\n      </Link>\n      <div className=\"info\">\n        <h2>Designed by Thergiakis Eftichios</h2>\n\n        <div>\n          <h3>Functionality of the app</h3>\n          <p>\n            Your messages are encrypted with AES algorithm when sent, decrypted\n            only when arrived and salted with a secret key. They are transfered\n            throught https protocol and are cleared after every logout or\n            refresh of the page. You don't need to logout because practically\n            you never get logged in. Everything is loaded to a temporary state\n            in your browser tab and nothing gets stored to the server\n            permanently. When the receiver is offline the messages are only then\n            stored in the database temporarely and they are cleared immediatelly\n            after the receiver logs in.{\" \"}\n            <b>\n              We strongly suggest that you read all of your messages because\n              they will be lost after you logout.\n            </b>{\" \"}\n            We are not using any cookies for the functionality of the app and we\n            don't store or sell any of your data, neither we have any profit out\n            of them elsehow. We believe in free speech and we strive for a\n            personal space online for everyone to hangout without being watched\n            or listened.\n          </p>\n          <h3>Contact </h3>\n          <p>\n            If you find any bugs or you would like to contribute please email us\n            at <em>iamtheef_th@protonmail.com</em> or talk to the admin here{\" \"}\n            <em>iamtheef</em>. If you have any suspicions that your account has\n            been compromised please don't hesitate to contact us immediatelly.\n          </p>\n          You can find the source code of the app{\" \"}\n          <a href=\"https://github.com/iamtheef/chat-room\">here</a>.\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useContext, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../Context/User\";\nimport { ProfileUpdatePayload } from \"../../../types\";\n\nexport const Settings: FC = () => {\n  const { user, submit } = useContext(UserContext);\n\n  const [form, setForm] = useState<ProfileUpdatePayload>({\n    username: \"\",\n    password: \"\",\n    newPassword: \"\",\n  });\n\n  const handleSubmit = async (e: any) => {\n    document.getElementsByName(\"field\").forEach((f: any) => {\n      f.value = \"\";\n    });\n\n    let updateCompleted = await submit(e, form, \"update\", user._id);\n\n    if (updateCompleted) {\n      setForm({\n        username: \"\",\n        password: \"\",\n        newPassword: \"\",\n      });\n\n      alert(\"YOUR ACCOUNT HAS BEEN UPDATED\");\n    }\n  };\n\n  return user ? (\n    <div className=\"quote\">\n      <h2>SETTINGS</h2>\n      <Link to=\"/main\">\n        {\" \"}\n        <p className=\"quote\">{\"<<<\"} </p>{\" \"}\n      </Link>\n      <h3 className=\"settings-field\" style={{ marginTop: \"-5px\" }}>\n        Change Password\n      </h3>\n      <input\n        name=\"field\"\n        type=\"password\"\n        onChange={(e) => {\n          e.persist();\n          setForm((prev) => ({ ...prev, newPassword: e.target.value }));\n        }}\n      ></input>\n      <h3 className=\"settings-field\">Change Username</h3>\n      <input\n        name=\"field\"\n        onChange={(e) => {\n          e.persist();\n          setForm((prev) => ({ ...prev, username: e.target.value }));\n        }}\n      ></input>\n\n      <p style={{ marginTop: \"40px\", marginBottom: \"-0px\" }}>\n        Please enter your old password to confirm changes *{\" \"}\n      </p>\n      <input\n        name=\"field\"\n        style={{ marginBottom: \"20px\" }}\n        type=\"password\"\n        onChange={(e) => {\n          e.persist();\n          setForm((prev) => ({ ...prev, password: e.target.value }));\n        }}\n      ></input>\n      <div>\n        <button onClick={(e) => handleSubmit(e)}>Submit</button>\n      </div>\n    </div>\n  ) : (\n    <Redirect to=\"login\" />\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, HashRouter, Redirect } from \"react-router-dom\";\nimport { Landing } from \"./Components/Landing\";\nimport { MainRoom } from \"./Components/MainRoom\";\nimport { Inbox } from \"./Components/Inbox\";\nimport { Info } from \"./Components/Info\";\nimport { Settings } from \"./Components/Settings\";\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n          <Route exact path=\"/login\" component={Landing} />\n          <Route exact path=\"/main\" component={MainRoom} />\n          <Route exact path=\"/inbox\" component={Inbox} />\n          <Route exact path=\"/info\" component={Info} />\n          <Route exact path=\"/settings\" component={Settings} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { UserProvider } from \"./Context/User\";\nimport { ContactsProvider } from \"./Context/Contacts\";\nimport { MessagesProvider } from \"./Context/Messages\";\nimport { InboxProvider } from \"./Context/Inbox\";\nimport { SocketProvider } from \"./Context/Socket\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <ContactsProvider>\n        <MessagesProvider>\n          <InboxProvider>\n            <SocketProvider>\n              <App />\n            </SocketProvider>\n          </InboxProvider>\n        </MessagesProvider>\n      </ContactsProvider>\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}